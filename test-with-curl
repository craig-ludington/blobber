#!/bin/bash
# Test Blobber with curl and report pass/fail in $HOME/blobber-pass and $HOME/blobber-fail
#
# Returns 0 if every test succeeded.
# Returns 1 and writes an error message to STDERR if any test failed.
#
# The Blobber URL defaults to http://localhost:3000.
# You can override that by exporting the environment variable:
#   BLOBBER_URL
# 
# Runs silently by default.
# You can override that and see what the script is doing by exporting the environment variable:
#   BLOBBER_TEST_VERBOSE
# The value doesn't matter, we just test whether the environment variable is set.


if [[ ${BLOBBER_TEST_VERBOSE:-unset} = unset ]] ; then
    DEBUG=false
else
    DEBUG=true
fi

echo "DEBUG: $DEBUG"

url=${BLOBBER_URL:-http://localhost:8080/blobber}
host=$(uname -n)
date=$(date '+%Y-%m-%d:%H:%M:%S')
size=$(( 1024 + ($RANDOM * 10)))

fail() {
    echo "$host $date $size $@" >> $HOME/blobber-fail
    echo "$host $date $size $@" >/dev/stderr
    exit 1
}

pass() {
    echo "$host $date $size $@" >> $HOME/blobber-pass
    exit 0
}

$DEBUG && echo "POST $size bytes"
data="$(dd if=/dev/random of=/tmp/data bs=1024 count=$size >/dev/null 2>&1)"

key=$(curl --silent -d "$data" -H "Content-Type: application/data" ${url})
[[ $key = '' ]] && fail "POST didn't return a key"
$DEBUG && echo "Stored: '$key'"

$DEBUG && echo "GET $key"
val=$(curl --silent ${url}/${key})
[[ $val = $data ]] || fail "Fetched value doesn't match stored value"

$DEBUG && echo "DELETE $key"
response=$(curl --silent -X DELETE ${url}/${key})
[[ $response = $key ]] || fail "DELETE $key FAILED"

$DEBUG && echo "GET previously deleted $key"
curl --silent -i ${url}/${key} | grep '410 Gone' >/dev/null || fail "GET deleted key $key FAILED by not returning a '410 Gone'"

$DEBUG && echo "DELETE previously deleted $key"
curl --silent -i -X DELETE ${url}/${key} | grep '410 Gone' >/dev/null || fail "DELETE deleted key $key FAILED by not returning a '410 Gone'"

pass
